import { Server } from "socket.io";
import { db } from "./firebase-admin.js";

export function handleSocketEvents(io) {
  io.on("connection", (socket) => {
    console.log("🔌 User connected:", socket.id);

    socket.on("joinChat", async ({ productId, buyerId, sellerId }) => {
      const roomId = `${productId}_${buyerId}_${sellerId}`;

      socket.join(roomId);
      console.log(`✅ ${socket.id} joined chat room: ${roomId}`);
    });

    socket.on("sendMessage", async ({ productId, buyerId, sellerId, senderId, text, images }) => {
      const roomId = `${productId}_${buyerId}_${sellerId}`;
      try {
        let uploadedUrls = [];
      // This won't work because you cannot send File objects from the browser via socket.io,
      // and thus this Node.js server won't receive valid File objects. Instead, the frontend
      // is sending an array of image URLs generated by URL.createObjectURL, which are only usable in the browser
      // and not valid for uploading to Cloudinary from the server.
      // Proper approach:
      // - Upload image files directly to Cloudinary from the frontend
      // - Send the resulting URLs to the backend/server via socket.io and save them
      
      // So, here we just use the provided `images` array as the already-uploaded URLs:

      uploadedUrls = Array.isArray(images) ? images : [];
      const messageData = {
        text,
        senderId,
        createdAt: new Date(),
        images: uploadedUrls,
      };

      // Create chat doc if it doesn't exist (only when first message is sent)
      await db.collection("chats").doc(roomId).set(
        { productId, buyerId, sellerId, createdAt: new Date() },
        { merge: true }
      );

      // Add message to the chat
      await db.collection("chats").doc(roomId).collection("messages").add(messageData);

      socket.to(roomId).emit("newMessage", { ...messageData, roomId });
      } catch (error) {
        console.error(error);
      }
    });

    socket.on("disconnect", () => console.log("❌ Disconnected:", socket.id));
  });
}